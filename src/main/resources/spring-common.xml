<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

		
	<!-- 配置整合mybatis-plus过程 -->
    <!-- 1、配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!-- 2、配置数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--3.这里使用MP提供的sqlSessionFactory，完成了Spring与MP的整合-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        
         <property name="dataSource" ref="dataSource"/>
         <property name="configLocation" value="classpath:mybatis-config.xml"/>
         <property name="globalConfig" ref="globalConfig"></property>

    </bean>



     <!--4-2 MapperScannerConfigurer扫描器：扫描某一路径下的mapper接口，
          扫描mapper接口的目的：是将Mapper接口生成代理注入到Spring中，然后进而实现在java代码中使用
          属性basePackage，指定的就是被扫描的持久层接口的所在的包的路径
     ps：如果这样配置的话，因为在Spring的容器中并没有直接显明的生成id="userMapper"的bean
                  那么我们测试的时候，就要简接的用test02.java即可
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
           <property name="basePackage" value="com.rj.bd.mapper"/>
   
    </bean>
   

<!-- 5、mybatisplus的全局策略配置：配置mp的全局策略 配置了这个就可以省略类上的@TableName()注解和主键上的@TableId()注解-->
    <bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig">
        <!--配置数据库全局默认的映射关系-->
        <property name="dbConfig">
            <bean id="dbConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig">
              
                <property name="idType" value="ID_WORKER"></property>
            </bean>
        </property>
    </bean>
		
	
	<!--
		4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源
	-->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 5. 使用声明式事务
		 transaction-manager：引用上面定义的事务管理器
	 -->
	<tx:annotation-driven transaction-manager="txManager" />	
		
		
</beans>